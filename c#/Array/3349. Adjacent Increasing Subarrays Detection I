public class Solution {
    public bool HasIncreasingSubarrays(IList<int> nums, int k) {
     int[] increasingFromFront=new int[nums.Count];
     int[] increasingFromBehind=new int[nums.Count];
     Array.Fill(increasingFromFront,1);
     Array.Fill(increasingFromBehind,1);
     for(int i=1;i<nums.Count;i++){
      if(nums[i]>nums[i-1])increasingFromFront[i]=increasingFromFront[i-1]+1;
     }
     for(int i=nums.Count-2;i>=0;i--){
      if(nums[i]<nums[i+1])increasingFromBehind[i]=increasingFromBehind[i+1]+1;
     }
     for(int i=0;i<nums.Count-1;i++){
      if(((increasingFromFront[i]>=increasingFromBehind[i+1])
       ||(increasingFromBehind[i+1]>=increasingFromFront[i]))
      && increasingFromFront[i]>=k && increasingFromBehind[i+1]>=k) return true; 
     }
     return false;
    }
}
