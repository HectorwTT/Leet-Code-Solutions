public class Solution {
    public int MinimumIndex(IList<int> nums) {
      int index=-1;
     Dictionary<int,int> map=new Dictionary<int,int>()   ;
     Dictionary<int,int> map1=new Dictionary<int,int>()  ;
     int []  counts=new int[nums.Count];
     
     for(int i=0;i<nums.Count;i++){
      if(!map.ContainsKey(nums[i]))map[nums[i]]=1;
      else map[nums[i]]=map[nums[i]]+1;
      if(!map1.ContainsKey(nums[i]))map1[nums[i]]=i;
      else map1[nums[i]]=i;  
      counts[i]=map[nums[i]];
     }  
     for(int i=0;i<nums.Count-1;i++){
      int count=counts[i];
      int lengthOfPrefix=i+1;
      int lastIndexOfNum=map1[nums[i]];
      int lastCount=counts[lastIndexOfNum]-count;
      int lengthOfSuffix=nums.Count-(i+1);
      if(count*2>lengthOfPrefix && lastCount*2>lengthOfSuffix){
        index=i;
        break;
      }        
     }
     return index;   
    }
}
