public class Solution {
    public int MinFallingPathSum(int[][] grid) {
      int   [,]    dp=new int[grid.Length,grid[0].Length];
     for(int i=0;i<grid[0].Length;i++){
       dp[0,i]=grid[0][i]; 
     }   
     for(int i=1;i<grid.Length;i++){
       for(int j=0;j<grid[0].Length;j++){
        GetMinSum(grid,dp,i,j);
       }
     }     
     int min=dp[grid.Length-1,0];
     for(int j=0;j<grid[0].Length;j++ ){
      min=Math.Min(dp[grid.Length-1,j],min);
     }
     return min;
    }

    public void GetMinSum(int[][]grid,int[,]dp,int row,int column){
      int number= grid[row][column];
      if(column==0)number+=dp[row-1,1];
      else number+=dp[row-1,column-1];
      for(int j=0;j<grid[row].Length;j++){
       if(j==column)continue;
       number=Math.Min(number,grid[row][column]+dp[row-1,j]);
      }  
      dp[row,column]=number;
      return;
    }    
    }
