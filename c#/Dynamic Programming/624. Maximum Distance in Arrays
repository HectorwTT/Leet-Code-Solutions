public class Solution {
    public int MaxDistance(IList<IList<int>> arrays) {
     int[] maxFromFront=new int[arrays.Count];
     int[] maxFromBehind=new int[arrays.Count];
     IList<int> array=arrays[0];
     maxFromFront[0]=array[array.Count-1];
     int max=0;
     for(int i=1;i<maxFromFront.Length;i++){
      IList<int> list=arrays[i];
      int listMax=list[list.Count-1];  
      maxFromFront[i]=Math.Max(maxFromFront[i-1],listMax);        
     }   
     IList<int> array1=arrays[maxFromBehind.Length-1];
     maxFromBehind[maxFromBehind.Length-1] =array1[array1.Count-1];
     for(int i=maxFromBehind.Length-2;i>=0;i--){
      IList<int> list=arrays[i]; 
      int listMax=list[list.Count-1];
      maxFromBehind[i]=Math.Max(maxFromBehind[i+1],listMax);       
     }
     max=Math.Max(0,Math.Abs(array[0]-maxFromBehind[1]));
     for(int i=1;i<maxFromBehind.Length-1;i++){
      IList<int> list=arrays[i]; 
      int listMin=list[0]; 
       max=Math.Max(max,Math.Abs(listMin-maxFromFront[i-1]));
       max=Math.Max(max,Math.Abs(listMin-maxFromBehind[i+1]));
     }
     max=Math.Max(max,Math.Abs(array1[0]-maxFromFront[maxFromFront.Length-2]));
     return max;     
    }
}
