public class Solution {
    public int Rob(TreeNode root) {
     int[] result = dfs(root);
     return Math.Max(result[0], result[1]);  
    }
     private int[] dfs(TreeNode node) {
        if (node == null) return new int[]{0, 0};        
        int[] left = dfs(node.left);
        int[] right = dfs(node.right);
        int rob = node.val + left[0] + right[0]; // Rob this node ➡ can't rob children
        int notRob = Math.Max(left[0], left[1]) + Math.Max(right[0], right[1]); 
        // Don't rob ➡ take max of children        
        return new int[]{notRob, rob};
    }    
   
}
