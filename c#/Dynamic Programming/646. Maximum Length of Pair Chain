public class Solution {
    public int FindLongestChain(int[][] pairs) {
     int [] lengths= new int[pairs.Length];
     Array.Sort(pairs, (a, b) =>
        {
            for (int i = 0; i < Math.Min(a.Length, b.Length); i++){
             if (a[i] != b[i]) return a[i].CompareTo(b[i]);
            }
            return a.Length.CompareTo(b.Length); // optional: shorter arrays come first if equal
        });
     for(int i=0;i<lengths.Length;i++)lengths[i]=1;
     for(int i=1;i<pairs.Length;i++){
      for(int j=0;j<i;j++){
       if(pairs[j][1]<pairs[i][0] && lengths[i]<=lengths[j]) lengths[i]=lengths[j]+1;
      }
     }
     Array.Sort(lengths);
     return lengths[lengths.Length-1];     
    }
}
