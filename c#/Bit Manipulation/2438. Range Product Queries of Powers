public class Solution {
    public int[] ProductQueries(int n, int[][] queries) {
     string binary="";
     int number=n;
     int[]ans=new int[queries.Length];
     IList<int> powers=new List<int>();
      int MOD = 1000000007;
     while(number!=0){
      int mod=number%2;
      binary=mod+binary;
      number/=2;  
     }
     int power=0;
     for(int i=binary.Length-1;i>=0;i--){
      char bit=binary[i];
      if(bit=='1')powers.Add((int)Math.Pow(2,power));  
      power++;
     }
      
     for (int i = 0; i < queries.Length; i++) {
            long cur = 1;
            int start = queries[i][0];
            int end = queries[i][1];
            for (int j = start; j <= end; j++) {
                cur = (cur * powers[j]) % MOD;
            }
            ans[i] = (int) cur;
     }
     return ans;   
    }
}
