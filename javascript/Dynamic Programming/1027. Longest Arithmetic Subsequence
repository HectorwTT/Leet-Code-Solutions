var longestArithSeqLength = function(nums) {
 let max= nums[0];
 let min = nums[0];
 for(let i=0;i<nums.length;i++){
  min= Math.min(min,nums[i]);
  max= Math.max(max,nums[i]);
 }
 let maxLength=-1;
 let diff= max-min;
 for(let i=-1*diff;i<=diff;i++){
  let length= getLongestSubsequence(nums,i);
  maxLength=Math.max(maxLength,length);
 }
 return maxLength;
};
    
var getLongestSubsequence=function(arr,difference) {
  const lengths=[];
  const map= new Map();
  lengths.length=arr.length;
  for(let i=0;i<lengths.length;i++)lengths[i]=1;
  let max= lengths[0];
  for(let i=0;i<arr.length;i++){
   if(map.has(arr[i]-difference)){
    let last= map.get(arr[i]-difference);
    lengths[i]=lengths[last]+1;
    max=Math.max(max,lengths[i]);
   }
   if(!map.has(arr[i]))map.set(arr[i],i);
   else map.set(arr[i],i);
  }
  return max; 
};    
