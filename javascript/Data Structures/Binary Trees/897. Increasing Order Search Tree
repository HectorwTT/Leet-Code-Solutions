var increasingBST = function(root) {
 const inOrderList= inorderTraversal(root);
 let newroot= new TreeNode(inOrderList[0]);
 let current= newroot;
 for(let i=1;i<inOrderList.length;i++){
  let val= inOrderList[i];
  const newnode= new TreeNode(val);
  current.right= newnode;
  current= current.right; 
 } 
 return newroot;   
};

var inorderTraversal = function(root) {
  const result=[];
   if(root==null)return result;
   else if(root.left==null && root.right==null){
    result.push(root.val);
    return result;
   }else if(root.left==null){
    let rightTraversal= inorderTraversal(root.right);
    result.push(root.val);
    for(let i=0;i<rightTraversal.length;i++)result.push(rightTraversal[i]);
    return result;
   }else if(root.right==null){
    let leftTraversal=inorderTraversal(root.left);
    for(let i=0;i<leftTraversal.length;i++)result.push(leftTraversal[i]);
    result.push(root.val);
    return result;
   }else{
    let leftTraversal=inorderTraversal(root.left);
    let rightTraversal=inorderTraversal(root.right);
    for(let i=0;i<leftTraversal.length;i++)result.push(leftTraversal[i]);
    result.push(root.val);
    for(let i=0;i<rightTraversal.length;i++)result.push(rightTraversal[i]);
    return result;
   }   
};
