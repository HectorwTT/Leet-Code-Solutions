class Solution {
public:
    vector<int> productQueries(int n, vector<vector<int>>& queries) {
     string binary="";
     int number=n;
     vector<int>ans;
     for(int i=0;i<queries.size();i++)ans.push_back(0);
     vector<int> powers;
      int MOD = 1000000007;
     while(number!=0){
      int mod=number%2;
      string digit=to_string(mod);
      binary=digit+binary;
      number/=2;  
     }
     int power=0;
     for(int i=binary.size()-1;i>=0;i--){
      char bit=binary[i];
      if(bit=='1')powers.push_back((int)std::pow(2,power));  
      power++;
     }
      
     for (int i = 0; i < queries.size(); i++) {
            long cur = 1;
            int start = queries[i][0];
            int end = queries[i][1];
            for (int j = start; j <= end; j++) {
                cur = (cur * powers[j]) % MOD;
            }
            ans[i] = (int) cur;
     }
     return ans;      
    }
};
