class Solution {
public:
    int longestMonotonicSubarray(vector<int>& nums) {
     vector<int> increasingSubArrayLength;
     vector<int> decreasingSubArrayLength;
     int increasingSubArrayMax=1;
     int decreasingSubArrayMax=1;
     for(int i=0;i<nums.size();i++)increasingSubArrayLength.push_back(1);
     for(int i=0;i<nums.size();i++)decreasingSubArrayLength.push_back(1);
     for(int i=1;i<nums.size();i++){
      if(nums[i]>nums[i-1])increasingSubArrayLength[i]=increasingSubArrayLength[i-1]+1; 
      if(nums[i]<nums[i-1])decreasingSubArrayLength[i]=decreasingSubArrayLength[i-1]+1;   
      increasingSubArrayMax=std::max(increasingSubArrayMax,increasingSubArrayLength[i]);
      decreasingSubArrayMax=std::max(decreasingSubArrayMax,decreasingSubArrayLength[i]);
     }
     return std::max(increasingSubArrayMax,decreasingSubArrayMax);     
    }
};
