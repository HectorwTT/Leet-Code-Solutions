class Solution {
public:
    int rob(vector<int>& nums) {
     if(nums.size()==1)return nums[0];
     vector<int> fromFirstHouse;
     vector<int> fromSecondHouse;
     for(int i=0;i<nums.size()-1;i++){
         fromFirstHouse.push_back(nums.at(i));
     }
     for(int i=0;i<nums.size()-1;i++){
         fromSecondHouse.push_back(0);
     }
     for(int i=1;i<nums.size();i++){
         fromSecondHouse[i-1]=nums[i];
     }
     int lootFromFirst=robHouses(fromFirstHouse);
     int lootFromSecond= robHouses(fromSecondHouse);
     return std::max(lootFromFirst,lootFromSecond);   
    }

    int robHouses(vector<int>& nums) {
     if(nums.size()==0) return 0;
     if(nums.size()==1)return nums.at(0);
     if(nums.size()==2)return std::max(nums.at(0),nums.at(1));
     vector<int> loot;
     loot.push_back(nums.at(0));
     loot.push_back(std::max(nums.at(1),nums.at(0)));
     for(int i=2;i<nums.size();i++){
      loot.push_back(std::max(nums.at(i)+loot.at(i-2),loot.at(i-1)));
     }
     return loot.at(loot.size()-1);  
    }
};
