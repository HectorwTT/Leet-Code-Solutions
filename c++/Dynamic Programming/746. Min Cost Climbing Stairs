class Solution {
public:
    int minCostClimbingStairs(vector<int>& cost) {
     if(cost.size()==2)return std::min(cost.at(0),cost.at(1));
     vector<int> minCosts;
     for(int i=0;i<cost.size();i++)minCosts.push_back(i);
     minCosts.at(minCosts.size()-1)=cost.at(cost.size()-1);
      minCosts.at(minCosts.size()-2)=cost.at(cost.size()-2);
      for(int i=minCosts.size()-3;i>=0;i--){
        minCosts.at(i)=cost.at(i)+std::min(minCosts.at(i+1),minCosts.at(i+2));
      }
      return std::min(minCosts.at(0),minCosts.at(1)); 
    }
};
