class Solution {
public:
    int maximumLength(vector<int>& nums) {
      vector<int> dp(nums.size(),1);
      int numOfOdd=0;
      int numOfEven=0;
      int lastOddIndex=-1;
      int lastEvenIndex=-1;
      int maxLength=1;
      if(nums[0]%2==0){
        numOfEven=1;
        lastEvenIndex=0;
      }else{
        numOfOdd=1;
        lastOddIndex=0;
      }
      for(int i=1;i<nums.size();i++){
       if(nums[i]%2==0){
        numOfEven++;
        if(lastOddIndex!=-1)dp[i]=dp[lastOddIndex]+1;   
        lastEvenIndex=i;
       }else{
        numOfOdd++;
        if(lastEvenIndex!=-1)dp[i]=dp[lastEvenIndex]+1;
        lastOddIndex=i;
       }
       int greaterNumber=std::max(numOfOdd,numOfEven);
       maxLength=std::max(greaterNumber,dp[i]); 
      }
      return maxLength;     
    }
};
