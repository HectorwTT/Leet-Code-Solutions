class Solution {
public:
    int maxTurbulenceSize(vector<int>& arr) {
     vector<int> differences;   
     vector<int> lengths;
     int max=0;
     for(int i=0;i<arr.size();i++)lengths.push_back(1);
     differences.push_back(0);
     for(int i=1;i<arr.size();i++)differences.push_back(arr[i]-arr[i-1]);  
     for(int i=1;i<arr.size();i++){
      if(differences[i]==0)continue;
      else if(differences[i]>0){
       if(i-1==0 || differences[i-1]<0)lengths[i]=lengths[i-1]+1;
       else lengths[i]=2;
      }else{
        if(i-1==0 || differences[i-1]>0)lengths[i]=lengths[i-1]+1;
        else lengths[i]=2;
      }  
     }
     for(int i=0;i<lengths.size();i++)max=std::max(max,lengths[i]);
     return max;      
    }
};
