class Solution {
public:
    bool canPlaceFlowers(vector<int>& flowerbed, int n) {
      int total=n;
      int numberPlaced=0;
      if(flowerbed.size()==1) return (n==1 && flowerbed[0]==0)|| (n==0 && flowerbed[0]==1)
                ||(n==0 && flowerbed[0]==0);
      while (n>0){
         for(int i=0;i<flowerbed.size();i++){
            if(i>0 && i<flowerbed.size()-1)
            {
                if(flowerbed[i-1]==0 && flowerbed[i+1]==0 && flowerbed[i]==0){
                 flowerbed[i]=1;
                 numberPlaced++;
                 break;
                }
            }
            if(i==0 && flowerbed[i]==0 && flowerbed[i+1]==0){
             flowerbed[i]=1;
             numberPlaced++;
             break;
            }
            if(i==flowerbed.size()-1 && flowerbed[i]==0 && flowerbed[i-1]==0){
                flowerbed[i]=1;
                numberPlaced++;
                break;
            }
         }
         n--;
        }
        return numberPlaced== total;  
    }
};
