class Solution {
public:
    string countAndSay(int n) {
     if(n==1)return "1"; 
      else{
       string str=countAndSay(n-1);
       vector<int>digits;
       vector<int>counts;
       int count=1;
       char previousCh=str[0];
       char currentCh=str[0];
       if(str.size()==1) return "11";
       string result="";       
       for(int i=1;i<str.size();i++){
        previousCh=str[i-1];
        currentCh=str[i]; 
        if(currentCh==previousCh)count++;  
        else{
          digits.push_back(previousCh-48);
          counts.push_back(count);
          count=1;  
        }
       }
       digits.push_back(currentCh-48);
       counts.push_back(count);
       for(int i=0;i<counts.size();i++){
        int digit=digits[i];
        int countOfDigit=counts[i];
        result+=to_string(countOfDigit)+""+to_string(digit);
       }
       return result;   
    }
    }
};
