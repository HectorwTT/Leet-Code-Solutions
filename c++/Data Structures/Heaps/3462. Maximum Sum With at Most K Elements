class Solution {
public:
    long long maxSum(vector<vector<int>>& grid, vector<int>& limits, int k) {
     priority_queue<int> maxHeap;
     long sum=0;
     for(int i=0;i<grid.size();i++){
      vector<int> arr=grid[i];
      std::sort(arr.begin(),arr.end());
      int count=0;
      int index=arr.size()-1;
      while(count<limits[i]){
        maxHeap.push(arr[index--]);
        count++;
      } 
     }
     int count=0;
     while(count<k){
      int number=maxHeap.top();
      maxHeap.pop();
      sum+=1L*number;  
      count++;
     }
     return sum;   
    }
};
