class Solution {
public:
    int numberOfSubstrings(string s) {
      int total=0;
      vector<int> aIndices;
      vector<int> bIndices;
      vector<int> cIndices;
      unordered_map<char,int> map;   
      for(int i=0;i<s.size();i++)aIndices.push_back(-1);
      for(int i=0;i<s.size();i++)bIndices.push_back(-1);
      for(int i=0;i<s.size();i++)cIndices.push_back(-1);
      for(int i=s.size()-1;i>=0;i--){
       char ch=s[i];
       if(map.find(ch)==map.end())map[ch]=i;
       else map[ch]=i;
       if(map.find('a')!=map.end())aIndices[i]= map['a'];
       if(map.find('b')!=map.end())bIndices[i]= map['b'];
       if(map.find('c')!=map.end())cIndices[i]= map['c'];
       if(aIndices[i]!=-1 && bIndices[i]!=-1 && cIndices[i]!=-1){
        int maxIndex=std::max(aIndices[i],std::max(bIndices[i],cIndices[i]));
        total+=s.size()-maxIndex;
       } 
      }       
      return total;     
    }
};
