class Solution {
public:
    bool isCousins(TreeNode* root, int x, int y) {
     TreeNode* parentOfX= getParent(root,NULL,x);
     TreeNode* parentOfY=getParent(root,NULL,y); 
     int depthOfX= getDepth(root,x,0);
     int depthOfY=getDepth(root,y,0);
     return depthOfX==depthOfY && parentOfX->val!=parentOfY->val;
    }
public:
    TreeNode* getParent(TreeNode* root,TreeNode* parent,int value){
      if(root==NULL)return NULL;
      else if (parent==NULL && root->val==value)return NULL;
      else if(root->left==NULL && root->right==NULL && root->val!=value)return NULL;
      else if (root->val==value)return parent;
      else{
        TreeNode* leftChild= getParent(root->left,root,value);
        TreeNode* rightChild= getParent(root->right,root,value);
        if(leftChild!=NULL)return leftChild;
        else if(rightChild!=NULL)return rightChild;
        else return NULL;
      }
    }
public:
    int getDepth(TreeNode* root, int value,int depth){
       if(root==NULL)return -1;
       else if(root->val==value) return depth;
       else if(root->left==NULL && root->right==NULL && root->val!=value)return -1;
       else if(root->val==value)return depth+1;
       else{
        int leftDepth= getDepth(root->left,value,depth+1);
        int rightDepth=getDepth(root->right,value,depth+1);
        if(leftDepth!=-1)return leftDepth;
        else if(rightDepth!=-1)return rightDepth;
        else return -1;
       }
    }            
    
};
