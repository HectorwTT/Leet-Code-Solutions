class Solution {
    public int longestStrChain(String[] words) {
      Arrays.sort(words, new Comparator<String>() {
            @Override
            public int compare(String s1, String s2) {
                if (s1.length() != s2.length()) {
                    return Integer.compare(s1.length(), s2.length());
                } else {
                    return s1.compareTo(s2);
                }
            }
        }); 
     HashMap<Integer,List<String>> wordsPerLength=new HashMap<>();
     HashMap<String,Integer> wordIndexes=new HashMap<>();   
     int [] lengths= new int[words.length];
     int maxLength=1;
     for(int i=0;i<lengths.length;i++){
        lengths[i]=1;
        if(!wordsPerLength.containsKey(words[i].length())){
          List<String> wordsList=new ArrayList<>();
          wordsList.add(words[i]);
          wordsPerLength.put(words[i].length(),wordsList);  
        }else{
          List<String> wordsList=wordsPerLength.get(words[i].length());
          wordsList.add(words[i]);
          wordsPerLength.put(words[i].length(),wordsList);   
        }
        if(!wordIndexes.containsKey(words[i]))wordIndexes.put(words[i],i);
        else wordIndexes.replace(words[i],i);
     }  
     for(int i=1;i<words.length;i++){
      if(words[i].length()==1) continue; 
      if(!wordsPerLength.containsKey(words[i].length()-1))continue;
      List<String> wordsList=wordsPerLength.get(words[i].length()-1);      
      for(int j=0;j<wordsList.size();j++){
       String word=wordsList.get(j);
       int index=wordIndexes.get(word); 
       if(isSubsequence(words[index],words[i])      
       &&   lengths[i]<=lengths[index]) lengths[i]=lengths[index]+1;
      }
      maxLength=Math.max(maxLength,lengths[i]);
     }     
     return maxLength; 
    }

   public boolean isSubsequence(String s, String t) {
        int index=0;
        if(s.length()==0) return true;
        for(int i=0;i<t.length();i++){
            char tch = t.charAt(i);
            char sch= s.charAt(index);
            if(tch==sch) {
                if(index==s.length()-1)return true;
                index++;
            }
        }
        return false;
    } 
}
