class Solution {
    public int minFallingPathSum(int[][] grid) {
     int[][]dp=new int[grid.length][grid[0].length];
     for(int i=0;i<grid[0].length;i++){
       dp[0][i]=grid[0][i]; 
     }   
     for(int i=1;i<grid.length;i++){
       for(int j=0;j<grid[0].length;j++){
        getMinSum(grid,dp,i,j);
       }
     }
     
     int min=dp[grid.length-1][0];
     for(int j=0;j<grid[0].length;j++ ){
      min=Math.min(dp[grid.length-1][j],min);
     }
     return min;
    }

    public void getMinSum(int[][]grid,int[][]dp,int row,int column){
      int number= grid[row][column];
      if(column==0)number+=dp[row-1][1];
      else number+=dp[row-1][column-1];
      for(int j=0;j<grid[row].length;j++){
       if(j==column)continue;
       number=Math.min(number,grid[row][column]+dp[row-1][j]);
      }  
      dp[row][column]=number;
      return;
    } 

}
