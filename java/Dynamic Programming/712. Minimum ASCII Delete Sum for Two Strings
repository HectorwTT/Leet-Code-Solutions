class Solution {
public int minimumDeleteSum(String s1, String s2) {
    int asciiLCS = findLCSAsciiSum(s1, s2);
    return getASCIISum(s1) + getASCIISum(s2) - 2 * asciiLCS;
}

public int getASCIISum(String string) {
    int total = 0;
    for (int i = 0; i < string.length(); i++) {
        total += string.charAt(i);
    }
    return total;
}

// Modified to return the max ASCII sum of any LCS
public int findLCSAsciiSum(String text1, String text2) {
    int[][] dp = new int[text1.length() + 1][text2.length() + 1];

    for (int i = 1; i <= text1.length(); i++) {
        for (int j = 1; j <= text2.length(); j++) {
            if (text1.charAt(i - 1) == text2.charAt(j - 1)) {
                dp[i][j] = dp[i - 1][j - 1] + text1.charAt(i - 1); // store ASCII sum
            } else {
                dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);
            }
        }
    }

    return dp[text1.length()][text2.length()];
}
}
