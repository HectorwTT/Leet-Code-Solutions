class Solution {
    public int minScoreTriangulation(int[] values) {
      int n = values.length;
        int[][] dp = new int[n][n];

        // dp[i][i+1] = 0 by default (no triangle)
        // length is number of vertices in the interval
        for (int len = 3; len <= n; len++) {
            for (int i = 0; i + len - 1 < n; i++) {
                int j = i + len - 1;
                int best = Integer.MAX_VALUE;
                // choose a k between i and j
                for (int k = i + 1; k <= j - 1; k++) {
                    int cost = dp[i][k] + dp[k][j] + values[i] * values[k] * values[j];
                    if (cost < best) best = cost;
                }
                dp[i][j] = best == Integer.MAX_VALUE ? 0 : best;
            }
        }

        return dp[0][n - 1];  
    }
}
