class Solution {
    public int longestSubsequence(int[] arr, int difference) {
     int [] lengths= new int[arr.length];
     HashMap<Integer,Integer> map= new HashMap<>();
     for(int i=0;i<lengths.length;i++)lengths[i]=1;
     int max= lengths[0];
     for(int i=0;i<arr.length;i++){
       if(map.containsKey(arr[i]-difference)){
        int last= map.get(arr[i]-difference);
        lengths[i]=lengths[last]+1;
        max=Math.max(max,lengths[i]);
       }
       if(!map.containsKey(arr[i]))map.put(arr[i],i);
       else map.replace(arr[i],i);
     }
     return max; 
    }
}
