class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
     int [][] dp=new int[obstacleGrid.length][obstacleGrid[0].length];
     if(obstacleGrid[0][0]==1)return 0;
     if(obstacleGrid[obstacleGrid.length-1][obstacleGrid[0].length-1]==1)return 0;
     if(obstacleGrid.length==1){
        if(obstacleGrid[0][obstacleGrid[0].length-1]==1)return 0;
        else return 1;
     }
     boolean hasFoundRow=false;     
     boolean hasFoundColumn=false;     
     for(int i=0;i<obstacleGrid.length;i++){
      for(int j=0;j<obstacleGrid[0].length;j++){
       if(i==0){
        if(obstacleGrid[i][j]==1)hasFoundRow=true;
        if(!hasFoundRow)dp[i][j]=1;
       }else if(j==0){
            if(obstacleGrid[i][j]==1)hasFoundColumn=true;
            if(!hasFoundColumn)dp[i][j]=1;
       }else{ 
         if(obstacleGrid[i][j]==0)dp[i][j]=dp[i-1][j]+dp[i][j-1];  
       }  
      } 
     }
     return dp[obstacleGrid.length-1][obstacleGrid[0].length-1];
    }
}
