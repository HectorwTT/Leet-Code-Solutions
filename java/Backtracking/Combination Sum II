class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
     List<List<Integer>> res = new ArrayList<>();
     //sort the array for required output;
     Arrays.sort(candidates);
     getcombinationSum(res, candidates, new ArrayList(), target,0);
     return res;
    }
     public void getcombinationSum(List<List<Integer>> res, int[] candidates,
                                    List<Integer> list, int target, int start) {
        
        if(target<0) return;
        if(target==0){
            res.add(new ArrayList<>(list)); return;
        }

        for(int i=start;i< candidates.length;i++){
            list.add(candidates[i]);
            getcombinationSum(res, candidates, list,target-candidates[i], i+1);
            list.remove(list.size()-1);
            // check for any duplicate in array to avoid duplicate result
            while(i<candidates.length-1 && candidates[i] == candidates[i+1]){
                i++;
            }
        }
    } 
}
