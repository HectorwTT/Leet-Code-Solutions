class Solution {
    public List<List<Integer>> combine(int n, int k) {
     int [] nums= new int[n];
     for(int i=0;i<nums.length;i++)nums[i]=i+1;
     return subsets(nums,k);
    }
    public List<List<Integer>> subsets(int[] nums,int k) {
     List<List<Integer>> result= new ArrayList<>();
     getSubsets(nums,k,0,new ArrayList<>(),result);
     return result;
    }

    void getSubsets(int[] nums, int k, int idx, 
                    List<Integer> current,List<List<Integer>> result) {
     if (current.size() == k) {
      result.add(new ArrayList<>(current));
      return;
     }
     if (idx == nums.length) return;
     int x= nums[idx];
     current.add(x);
     getSubsets(nums, k, idx+1, current, result);
     current.remove(current.size()-1);
     getSubsets(nums, k, idx+1, current, result);
    }
}
