class Solution {
    public List<String> wordSubsets(String[] words1, String[] words2) {
      List<String> result=new ArrayList<>();
      HashMap <Character,Integer> map = new HashMap<>();      
      for(int i=0;i<words2.length;i++){
        String word=words2[i];
        HashMap <Character,Integer> map1 = new HashMap<>();
        for(int j=0;j<word.length();j++){
          char ch= word.charAt(j);
          if(!map1.containsKey(ch)) map1.put(ch,1);
          else map1.replace(ch,map1.get(ch)+1);  
        }
        for(Character key:map1.keySet()){
          if(!map.containsKey(key)) map.put(key,map1.get(key));
          else map.replace(key,Math.max(map.get(key),map1.get(key))); 
        }
      }
      for(int i=0;i<words1.length;i++){
        String word=words1[i];
        HashMap <Character,Integer> map1 = new HashMap<>();
        for(int j=0;j<word.length();j++){
           char ch= word.charAt(j);
          if(!map1.containsKey(ch)) map1.put(ch,1);
          else map1.replace(ch,map1.get(ch)+1);    
        }
        int number=0;
        for(Character key:map.keySet()){
          int count=map.get(key);
          if(!map1.containsKey(key) || map1.get(key)<count)break;
          else number++;  
        }
        if(number==map.size())result.add(word);
      }
      return result; 
    }
}
