class Solution {
    public int minimumCardPickup(int[] cards) {
       int min=-1;
       HashMap<Integer,List<Integer>> map = new HashMap<>();
       for(int i=0;i<cards.length;i++){
        if(!map.containsKey(cards[i])){
         List<Integer> list= new ArrayList<>();
         list.add(i);
         map.put(cards[i],list);
        }else{
          List<Integer> list= map.get(cards[i]);
          list.add(i);
          map.replace(cards[i],list);
        }
       } 
       for(Integer key: map.keySet()){
        List<Integer> list= map.get(key);
        list.sort(null);
        if(list.size()<2)continue;
        int minDiff=cards.length+1;
        for(int j=1;j<list.size();j++){
         int curr= list.get(j);
         int prev=list.get(j-1);
         if(curr-prev+1<minDiff)minDiff=curr-prev+1;
        }
        if(min==-1){
         min=minDiff;
        }else{
          if(min>minDiff)min= minDiff;
        }
       }
       return min;
    }
}
