class Solution {
    public int winningPlayerCount(int n, int[][] pick) {
     int count=0;
     HashMap<Integer,HashMap<Integer,Integer>> map=new HashMap<>();
     for(int i=0;i<pick.length;i++){
      if(!map.containsKey(pick[i][0])){
       HashMap<Integer,Integer> map1=new HashMap<>();
       map1.put(pick[i][1],1);
       map.put(pick[i][0],map1);
      }else{
       HashMap<Integer,Integer> map1=map.get(pick[i][0]);
       if(!map1.containsKey(pick[i][1]))map1.put(pick[i][1],1);
       else map1.replace(pick[i][1],map1.get(pick[i][1])+1);
       map.replace(pick[i][0],map1); 
      }  
     }   
     for(Integer key:map.keySet()){
      Map<Integer,Integer> map1=map.get(key);
      for(Integer color:map1.keySet()){
       if(map1.get(color)>=key+1){
        count++;
        break;
       } 
      } 
     }
     return count;
    }
}
