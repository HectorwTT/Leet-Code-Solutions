class Solution {
    public int similarPairs(String[] words) {
     int total=0;
     for(int i=0;i<words.length;i++){
         String word= words[i];
          HashMap<Character,Integer> map1= getCounts(word) ;
          for(int j=i+1;j<words.length;j++){
            HashMap<Character,Integer> map2=getCounts(words[j]);
            if(areSimilar(map1,map2))total++;
          }
     }
     return total;
    }
    public HashMap<Character,Integer> getCounts(String word){
     HashMap<Character,Integer> map = new HashMap<>();
     for(int i=0;i<word.length();i++){
      char ch = word.charAt(i);
      if(map.containsKey(ch)) map.replace(ch,map.get(ch)+1);
      else map.put(ch,1);
     }
     return map;
    }
    public boolean areSimilar(HashMap<Character,Integer> map1,HashMap<Character,Integer> map2){
     for(Character key:map1.keySet()){
         if(!map2.containsKey(key)) return false;
     }
     for(Character key:map2.keySet()){
         if(!map1.containsKey(key)) return false;
     }
     return true;
    }
}
