class Solution {
    public int[] findEvenNumbers(int[] digits) {
     HashMap<Integer,Integer> map= new HashMap<>();
     List<Integer> evens= new ArrayList<>();
     for(int i=0;i<digits.length;i++){
      if(!map.containsKey(digits[i]))map.put(digits[i],1);
      else map.replace(digits[i],map.get(digits[i])+1);
     }
     for(int i=100;i<1000;i++){
      if(i%2==1)continue;
      String number=""+ i;
      boolean hasDigits=true;
      HashMap<Integer,Integer> numMap= new HashMap<>();
      for(int j=0;j<number.length();j++){
       char ch= number.charAt(j);
       int chval= ch-48;
       if(!numMap.containsKey(chval))numMap.put(chval,1);
       else numMap.replace(chval,numMap.get(chval)+1);
      }
      for(Integer key:numMap.keySet()){
       if(!map.containsKey(key)){
        hasDigits=false;
        break;
       }
       if( map.containsKey(key) && numMap.get(key)>map.get(key)){
           hasDigits=false;
           break;
       }
        
      }
       if(hasDigits)evens.add(i);
     }
     evens.sort(null);
     return evens.stream().mapToInt(Integer::intValue).toArray();

    }
}
