class Solution {
    public int maxFreqSum(String s) {
     HashMap<Character,Integer> vowelCounts=new HashMap<>();
     HashMap<Character,Integer> consonantCounts=new HashMap<>();
     int maxVowelCount=0;
     int maxConsonantCount=0;
     for(int i=0;i<s.length();i++){
      char ch=s.charAt(i);
      if(ch=='a' || ch=='e' || ch=='i' || ch=='o' || ch=='u'){
       if(!vowelCounts.containsKey(ch))vowelCounts.put(ch,1);
       else vowelCounts.replace(ch,vowelCounts.get(ch)+1); 
      }else{
       if(!consonantCounts.containsKey(ch))consonantCounts.put(ch,1);
       else consonantCounts.replace(ch,consonantCounts.get(ch)+1);  
      }
     }
     for(Character key : vowelCounts.keySet())
       maxVowelCount=Math.max(vowelCounts.get(key),maxVowelCount);
     for (Character key : consonantCounts.keySet()) 
      maxConsonantCount=Math.max(consonantCounts.get(key),maxConsonantCount); 
     return maxVowelCount+maxConsonantCount;    
    }
}
