class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
     if(root==null)return new ArrayList<>();
     if (root.left==null && root.right==null) {
             List<Integer> rootlist = new ArrayList<>();
             rootlist.add(root.val);
             return rootlist;
     }else {
      if(root.left==null){
       List <Integer> result = new ArrayList<>();
       List<Integer> rightlist = postorderTraversal(root.right);
       result.addAll(rightlist);
       result.add(root.val);
       return result;
      }else if (root.right==null){
        List <Integer> result = new ArrayList<>();
        List<Integer> leftlist = postorderTraversal(root.left);
        result.addAll(leftlist);
        result.add(root.val);
        return result;
      }else{
        List <Integer> leftlist=new ArrayList<>();
        List <Integer> rightlist=new ArrayList<>();
        if(root.left!=null)leftlist=postorderTraversal(root.left);  
        if (root.right!=null)
         rightlist= postorderTraversal(root.right);
         List <Integer> result = new ArrayList<>();
         result.addAll(leftlist);
         result.addAll(rightlist);
         result.add(root.val);
         return result;
        }
     } 

    }
}
