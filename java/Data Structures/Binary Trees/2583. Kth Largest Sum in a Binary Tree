class Solution {
    public long kthLargestLevelSum(TreeNode root, int k) {
     PriorityQueue<Long>sums= new PriorityQueue<>();
     Queue<TreeNode>q= new LinkedList<>();
     if(root!=null)q.add(root);
     while(!q.isEmpty()){
       int size=q.size();
       long sum=0;
       for(int i=0;i<size;i++){
        TreeNode curr=q.poll();
        sum+=curr.val;
        if(curr.left!=null)q.add(curr.left);
        if(curr.right!=null)q.add(curr.right);
       }
       sums.offer(sum);
     }
     if(sums.size()<k)return -1;
     int count=0;
     long result=0;
     int index= sums.size()-1-(k-1);
     while(count<=index){
      result= sums.remove();
      count++;
     }
     return result;
    }
}
