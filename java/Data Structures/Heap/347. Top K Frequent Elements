class Solution {
    public int[] topKFrequent(int[] nums, int k) {
       int [] result;
       List<Integer> list= new ArrayList<>();
       HashMap<Integer,Integer> map = new HashMap<>();
       for(int i=0;i<nums.length;i++){
        if(!map.containsKey(nums[i]))map.put(nums[i],1);
        else map.replace(nums[i],map.get(nums[i])+1);
       } 
       PriorityQueue<Integer> maxHeap= new PriorityQueue<>((a,b)->map.get(b)-map.get(a));
       maxHeap.addAll(map.keySet());
       int count=0;
       while(count!=k){
        int number= maxHeap.remove();
        list.add(number);
        count++;
       }
       result= new int[list.size()];
       for(int i=0;i<list.size();i++){
        result[i]= list.get(i);
       }
       return result;
    }
}
