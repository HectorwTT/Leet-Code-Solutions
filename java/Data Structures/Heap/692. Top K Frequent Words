class Solution {
    public List<String> topKFrequent(String[] words, int k) {
       HashMap<String,Integer> map= new HashMap<>();
       List<String> result= new ArrayList<>();
       for(int i=0;i<words.length;i++){
        if(!map.containsKey(words[i]))map.put(words[i],1);
        else map.replace(words[i],map.get(words[i])+1);
       } 
       PriorityQueue <String> maxHeap = new PriorityQueue<>((a, b) -> 
    ((map.get(b) - map.get(a) != 0)) ? (map.get(b) - map.get(a)):
     (a.compareTo(b)));
      maxHeap.addAll(map.keySet());
     int count=0;
     while(count<k){
      result.add(maxHeap.remove());
      count++;
     }
     return result;
    }
}
