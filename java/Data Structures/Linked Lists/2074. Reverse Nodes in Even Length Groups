class Solution {
    public ListNode reverseEvenLengthGroups(ListNode head) {
      HashMap<Integer,List<Integer>> map=new HashMap<>();
      List<Integer> numbers=new ArrayList<>();
      ListNode current=head;
      int number=1;
      int count=0;
      while(current!=null){
       List<Integer> list=new ArrayList<>(); 
       while(count!=number && current!=null){
        list.add(current.val);
        current=current.next;
        count++;
       }
       count=0;
       map.put(number,list);
       numbers.add(number);
       number++;       
      }
      numbers.sort(null);
      if(map.size()==0)return null;
      List <Integer>first=map.get(1); 
      ListNode result= new  ListNode(first.get(0));
      ListNode resultCurrent=result;
      for(int i=1;i<numbers.size();i++){
       int group=numbers.get(i);
       List<Integer> listToAdd=map.get(group);
       if( listToAdd.size()%2==0) Collections.reverse(listToAdd);
       for(int j=0;j<listToAdd.size();j++){
        int value=listToAdd.get(j);
        resultCurrent.next=new ListNode(value);
        resultCurrent=resultCurrent.next; 
       }        
      }
      return result; 
    }
}
