class Solution {
    public int[] productExceptSelf(int[] nums) {
        int [] forwardmultiplications = new int[nums.length];
        int [] backwardmultiplications = new int[nums.length];
        int[] productexceptself= new int [nums.length];
        forwardmultiplications[0]= nums[0];
        backwardmultiplications[nums.length-1]= nums[nums.length-1];
        for(int i=1;i<nums.length;i++){
            forwardmultiplications[i]=nums[i]* forwardmultiplications[i-1];
        }
        for(int i=nums.length-2;i>=0;i--){
            backwardmultiplications[i]= nums[i] 
                          *backwardmultiplications[i+1];
        }
        productexceptself[0]= backwardmultiplications[1];
        for(int i=1;i<nums.length-1;i++){
          productexceptself[i]= forwardmultiplications[i-1]
                                * backwardmultiplications[i+1];
        }
        productexceptself[nums.length-1]=
           forwardmultiplications[nums.length-2];
        return productexceptself;
    }
}
